A. Test decomp method
     - The Cholesky-Banachiewicz algorithm is implemented for decomposition.
     - The deomposittion is tested on random real symmetric positive definite matrices
     - To create a random real symmetric positive difinite matrix first at random square real matrix B is generated. Then A = B^TB, and A is symmetric and positive definite.
     A:

       611        373        260 
       373        309         48 
       260         48        272 
     L:

      24.7          0          0 
      15.1       9.02          0 
      10.5      -12.3       3.25 
     - Check that L is lower triangular using Cholesky.lower_triangular: True
     - Check that L*L^T = A: True

B. Implementing linear equation solver, calculation of determinant and calculation of inverse matrix
     - Firstly the linear equation solver is implemented. A linear equation Ax=b can be rewritten to LL^Tx=b => Ly=b with L^Tx=y
     - As L is lower triangular and L^T therefore is upper triangular, Ly=b can be solved using forward substitution and L^Tx=y can afterwards be solved by back substitution.
     - Test of implemented solver on random real symmetric and positive definite matrix A and random matrix b:
 A:

       386        244        428        138        545 
       244        543        358        144        625 
       428        358        557        217        662 
       138        144        217        126        232 
       545        625        662        232        981 
 L:

      19.6          0          0          0          0 
      12.4       19.7          0          0          0 
      21.8       4.44       7.92          0          0 
      7.02       2.88       6.46       5.16          0 
      27.7       14.2     -0.681      0.117       2.94 
 b: 
         6         96         47         74          8 
 Computed x:
      8.45       5.91      -1.79       1.77      -7.66 
     - Is Ax=b? True 
     - The implemented solve method works as intended.

     - Secondly a method for calculation of the determinant is implemented.
     - det(A)=det(LL^T)=det(L)det(L^T)=det(L)^2. The determinant of L is the product of the diagonal elements, as it is lower triangular.
     - Testing the implemented method on random 3x3 matrix A=[[1, 2, 3],[0, 1, 4], [1, 0, 1]] with A^TA = [[2,2,4],[2,5,10],[4, 10, 26]]. det(A^TA) = 36
     - Is computed determiant for A^TA = 36? True 

     - Lastly a method for calculating the inverse is implemented.
     - This is done by using the implemenbted solver to solve n linear equations Ax_i=e_i, where e_i is the i'th unit vector. x_i the make up the columns of the inverse matrix.
     - The implemented method is tested on a random square symmetric real positive definite matrix C:

       148         38 
        38         10 
     - Calculated inverse of C is called B and is the following matrix:

     0.278      -1.06 
     -1.06       4.11 
     - Is CB=I? True
     - As seen, the routine for calculation of the inverse works as intended.

C. Operations count
     - The measured time of a Cholesky decomposition as a function of matrix size N can be seen plotted in times.gnuplot.svg.
     - The function fitted to the time of a QR decomposition as a function of N is also plotted in times.gnuplot.svg for comparison.
     - This function was taken from homework 1, linear equations.
     - It is seen how the time scaling with N is a lot lower for Cholesky compared to QR decomposition. The scaling is still proportional to N^3 however.
     - It should be noted, however, that the QR decompositions in homework 1 was not performed specifically on symmetric  positive definite matrices, which is the case for the Cholesky decomposition.
